{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Adib\\\\CODING\\\\pomodoro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Adib\\\\CODING\\\\pomodoro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Adib\\\\CODING\\\\pomodoro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Adib\\\\CODING\\\\pomodoro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Adib\\\\CODING\\\\pomodoro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Adib\\\\CODING\\\\pomodoro\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Pomodoro from './Components/Pomodoro';\nimport ShortBreak from './Components/ShortBreak';\nimport LongBreak from './Components/LongBreak';\nimport Timer from './Components/Timer';\nimport StartButton from './Components/StartButton';\nimport StopButton from './Components/StopButton';\nimport Reset from './Components/Reset';\nimport alarm from './timerSound.wav';\n\nvar EditAlarm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditAlarm, _Component);\n\n  function EditAlarm() {\n    _classCallCheck(this, EditAlarm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditAlarm).apply(this, arguments));\n  }\n\n  _createClass(EditAlarm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.props.minutes,\n        onChange: this.props.changeMinutes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        value: this.props.seconds,\n        onChange: this.props.changeSeconds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return EditAlarm;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(App, _Component2);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.pomodoro = function () {\n      return _this.setState({\n        time: 1500,\n        resetTime: 1500\n      });\n    };\n\n    _this.shortBreak = function () {\n      return _this.setState({\n        time: 300,\n        resetTime: 300\n      });\n    };\n\n    _this.longBreak = function () {\n      return _this.setState({\n        time: 600,\n        resetTime: 600\n      });\n    };\n\n    _this.start = function () {\n      if (_this.state.intervalInProgress === false) {\n        var id = setInterval(_this.updateTime, 1000);\n\n        _this.setState({\n          countDownId: id,\n          intervalInProgress: true\n        });\n      }\n    };\n\n    _this.updateTime = function () {\n      return _this.setState({\n        time: _this.state.time - 1\n      });\n    };\n\n    _this.stop = function () {\n      if (_this.state.intervalInProgress === true) {\n        clearInterval(_this.state.countDownId);\n\n        _this.setState({\n          intervalInProgress: false\n        });\n      }\n    };\n\n    _this.reset = function () {\n      return _this.setState({\n        time: _this.state.resetTime\n      });\n    };\n\n    _this.changeMinutes = function (event) {\n      _this.setState({\n        minutesInput: event.target.value\n      });\n    };\n\n    _this.changeSeconds = function (event) {\n      _this.setState({\n        secondsInput: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function () {\n      _this.setState({\n        time: parseInt(_this.state.minutesInput * 60, 10) + parseInt(_this.state.secondsInput, 10),\n        resetTime: _this.state.minutesInput * 60 + _this.state.secondsInput\n      });\n    };\n\n    _this.playAudio = function (url) {\n      var audio = new Audio(url);\n      audio.play();\n    };\n\n    _this.state = {\n      time: 1500,\n      countDownId: '',\n      intervalInProgress: false,\n      resetTime: 1500,\n      minutesInput: '',\n      secondsInput: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.time === 0) {\n        this.playAudio(alarm);\n        this.stop();\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Pomodoro, {\n        pomodoro: this.pomodoro,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(ShortBreak, {\n        shortBreak: this.shortBreak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(LongBreak, {\n        longBreak: this.longBreak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Timer, {\n        minutes: Math.floor(this.state.time / 60),\n        seconds: this.state.time % 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(StartButton, {\n        start: this.start,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(StopButton, {\n        stop: this.stop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Reset, {\n        reset: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(EditAlarm, {\n        minutes: this.state.minutesInput,\n        seconds: this.state.secondsInput,\n        submit: this.handleSubmit,\n        changeMinutes: this.changeMinutes,\n        changeSeconds: this.changeSeconds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Adib\\CODING\\pomodoro\\src\\App.js"],"names":["React","Component","Pomodoro","ShortBreak","LongBreak","Timer","StartButton","StopButton","Reset","alarm","EditAlarm","props","minutes","changeMinutes","seconds","changeSeconds","submit","App","pomodoro","setState","time","resetTime","shortBreak","longBreak","start","state","intervalInProgress","id","setInterval","updateTime","countDownId","stop","clearInterval","reset","event","minutesInput","target","value","secondsInput","handleSubmit","parseInt","playAudio","url","audio","Audio","play","Math","floor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Pomodoro from './Components/Pomodoro'\nimport ShortBreak from './Components/ShortBreak'\nimport LongBreak from './Components/LongBreak'\nimport Timer from './Components/Timer'\nimport StartButton from './Components/StartButton'\nimport StopButton from './Components/StopButton'\nimport Reset from './Components/Reset'\nimport alarm from './timerSound.wav'\n\nclass EditAlarm extends Component {\n  render() {\n    return (\n      <div>\n        <input value={this.props.minutes} onChange={this.props.changeMinutes} />\n        <input value={this.props.seconds} onChange={this.props.changeSeconds} />\n        <button onClick={this.props.submit}>Submit</button>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      time: 1500,\n      countDownId: '',\n      intervalInProgress: false,\n      resetTime: 1500,\n      minutesInput: '',\n      secondsInput: ''\n    }\n  }\n\n  pomodoro = () => { return this.setState({time: 1500, resetTime: 1500}) }\n\n  shortBreak = () => { return this.setState({time: 300, resetTime: 300}) }\n\n  longBreak = () => { return this.setState({time: 600, resetTime: 600}) }\n\n  start = () => {\n    if (this.state.intervalInProgress === false) {\n      let id = setInterval(this.updateTime, 1000)\n      this.setState({\n        countDownId: id,\n        intervalInProgress: true\n      })\n    }\n  }\n\n  updateTime = () => { return this.setState({ time: this.state.time - 1 }) }\n\n  stop = () => {\n    if (this.state.intervalInProgress === true) {\n      clearInterval(this.state.countDownId)\n      this.setState({ intervalInProgress: false })\n    }\n  }\n\n  reset = () => { return this.setState({ time: this.state.resetTime }) }\n\n  changeMinutes = (event) => {\n    this.setState({\n      minutesInput: event.target.value\n    })\n  }\n\n  changeSeconds = (event) => {\n    this.setState({\n      secondsInput: event.target.value\n    })\n  }\n\n  handleSubmit = () => {\n    this.setState({\n      time: parseInt((this.state.minutesInput * 60), 10) + parseInt((this.state.secondsInput), 10),\n      resetTime: (this.state.minutesInput * 60) + (this.state.secondsInput)\n    })\n  }\n\n  playAudio = (url) => {\n    let audio = new Audio(url)\n    audio.play()\n  }\n\n  render() {\n    if (this.state.time === 0) {\n      this.playAudio(alarm)\n      this.stop()\n    }\n    return (\n      <div className=\"App\">\n        <Pomodoro pomodoro={this.pomodoro} />\n        <ShortBreak shortBreak={this.shortBreak} />\n        <LongBreak longBreak={this.longBreak} />\n        <Timer minutes={Math.floor(this.state.time / 60)} seconds={this.state.time % 60} />\n        <StartButton start={this.start} />\n        <StopButton stop={this.stop} />\n        <Reset reset={this.reset} />\n        <EditAlarm minutes={this.state.minutesInput} seconds={this.state.secondsInput} submit={this.handleSubmit} changeMinutes={this.changeMinutes} changeSeconds={this.changeSeconds} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}